using System;
using System.IO;
using System.Collections.Generic;

namespace Lab_09
{
    [Flags]
    enum SongGenre
    {
        Unclassified = 0,
        Pop = 0b1,
        Rock = 0b10,
        Blues = 0b100,
        Country = 0b1_000,
        Metal = 0b10_000,
        Soul = 0b100_000,
    } 

    class Song
    {
        public string Artist { get; }
        public string Title { get; }
        public double Length { get; }
        public SongGenre Genre { get; }


        public Song(string artist, string title, double length, SongGenre genre)
        {   
            this.Artist = artist;
            this.Title = title;
            this.Length = length;
            this.Genre = genre;
        }

        public override string ToString()
        {
            return $"{this.Artist} - {this.Title} ({this.Genre}) {this.Length:F2}min";
        }
    }

    class Library
    {
        private static List<Song> songs  = new List<Song>();

        public static void LoadSongs (string filename)
        {
            songs = new List<Song>();
            string title;
            string artist;
            double length;
            SongGenre genre;

            TextReader reader = new StreamReader(filename);

            string fileLine;
            while ((fileLine = reader.ReadLine()) != null)
            {
                title = fileLine;
                artist = reader.ReadLine();
                length = double.Parse(reader.ReadLine());
                genre = (SongGenre)Enum.Parse(typeof (SongGenre), reader.ReadLine());
                songs.Add(new Song(artist, title, length, genre));
            }
        }

        public static void DisplaySongs ()
        {
            foreach (Song song in songs)
            {
                Console.WriteLine(song.ToString());
            }
        }

        public static void DisplaySongs(double longerThan)
        {
            foreach (Song song in songs)
            {
                if (song.Length > longerThan)
                {
                    Console.WriteLine(song.ToString());
                }
            }
        }

        public static void DisplaySongs(SongGenre genre)
        {
            foreach (Song song in songs)
            {
                if (song.Genre == genre)
                {
                    Console.WriteLine(song.ToString());
                }
            }
        }

        public static void DisplaySongs(string artist)
        {
            foreach (Song song in songs)
            {
                if (song.Artist == artist)
                {
                    Console.WriteLine(song.ToString());
                }
            }
        }
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            //To test the constructor and the ToString method
            Console.WriteLine(new Song("Baby", "Justin Bebier", 3.35, SongGenre.Pop));

            //This is first time that you are using the bitwise or. It is used to specify a combination of genres
            Console.WriteLine(new Song("The Promise", "Chris Cornell", 4.26, SongGenre.Country | SongGenre.Rock));

            Library.LoadSongs("Week_03_lab_09_songs4.txt");     //Class methods are invoke with the class name
            Console.WriteLine("\n\nAll songs");
            Library.DisplaySongs();

            SongGenre genre = SongGenre.Rock;
            Console.WriteLine($"\n\n{genre} songs");
            Library.DisplaySongs(genre);

            string artist = "Bob Dylan";
            Console.WriteLine($"\n\nSongs by {artist}");
            Library.DisplaySongs(artist);

            double length = 5.0;
            Console.WriteLine($"\n\nSongs more than {length}mins");
            Library.DisplaySongs(length);
        }
    }
}
